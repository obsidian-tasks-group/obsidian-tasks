Results of custom groupers



group by function task.due?.format("YYYY-MM-DD dddd") || ""
Like "group by task.due", except it does not write "No due date" if there is no due date. The question mark (`?`) and `|| ""` are needed because the due date value may be null
=>
2023-05-30 Tuesday
2023-05-31 Wednesday
2023-06-01 Thursday
Invalid date
====================================================================================


group by function task.due?.format("dddd") || ""
Group by day of the week (Monday, Tuesday, etc)
=>
Invalid date
Thursday
Tuesday
Wednesday
====================================================================================


group by function task.due?.format("YYYY MM MMM") || "no due date"
Group by month, for example "2023 05 May". The month number is also displayed, to control the sort order of headings
=>
2023 05 May
2023 06 Jun
Invalid date
no due date
====================================================================================


group by function task.due?.format("YYYY-MM MMM [- Week] WW") || "no  date"
Group by month and week number, for example "2023-05 May - Week 22", or show a default heading if no date. If the month number is not displayed, in some years the first or last week of the year is displayed in a non-logical order
=>
2023-05 May - Week 22
2023-06 Jun - Week 22
Invalid date
no  date
====================================================================================


group by function task.due?.fromNow() || ""
Group by the time from now, for example "8 days ago". Whilst interesting, the alphabetical sort order makes the headings a little hard to read
=>
10 days ago
11 days ago
12 days ago
Invalid date
====================================================================================

