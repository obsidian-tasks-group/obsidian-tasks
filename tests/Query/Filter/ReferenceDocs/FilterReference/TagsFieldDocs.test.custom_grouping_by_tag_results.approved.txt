Results of custom groupers



group by function task.tags
Like "group by tags" except that tasks with no tags have no heading instead of "(No tags)"
=>
#context/home
#context/work
#multiple-tags1
#multiple-tags2
#project/project1
#tag
#tag/subtag
#tag/subtag/sub-sub-tag
====================================================================================


group by function task.tags.join(", ")
Tasks with multiple tags are listed once, with a heading that combines all the tags. Separating with commas means the tags are clickable in the headings
=>
#context/home
#context/work
#multiple-tags1, #multiple-tags2
#project/project1
#tag
#tag/subtag
#tag/subtag/sub-sub-tag
====================================================================================


group by function task.tags.filter( (t) => t.includes("#context/"))
Only create headings for tags that contain "#context/"
=>
#context/home
#context/work
====================================================================================


group by function task.tags.filter( (t) => ! t.includes("#tag"))
Create headings for all tags that do not contain "#tag"
=>
#context/home
#context/work
#multiple-tags1
#multiple-tags2
#project/project1
====================================================================================

