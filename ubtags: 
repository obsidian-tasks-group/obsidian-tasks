[1mdiff --git a/src/Commands/CreateOrEdit.ts b/src/Commands/CreateOrEdit.ts[m
[1mindex 04318d0..9843a6e 100644[m
[1m--- a/src/Commands/CreateOrEdit.ts[m
[1m+++ b/src/Commands/CreateOrEdit.ts[m
[36m@@ -69,6 +69,7 @@[m [mconst taskFromLine = ({ line, path }: { line: string; path: string }): Task => {[m
             path,[m
             indentation: '',[m
             originalStatusCharacter: ' ',[m
[32m+[m[32m            subtags: '',[m
             priority: Priority.None,[m
             startDate: null,[m
             scheduledDate: null,[m
[36m@@ -101,6 +102,7 @@[m [mconst taskFromLine = ({ line, path }: { line: string; path: string }): Task => {[m
         path,[m
         indentation,[m
         originalStatusCharacter: statusString,[m
[32m+[m[32m        subtags: '',[m
         blockLink,[m
         priority: Priority.None,[m
         startDate: null,[m
[1mdiff --git a/src/Task.ts b/src/Task.ts[m
[1mindex fb521c3..6b078a6 100644[m
[1m--- a/src/Task.ts[m
[1m+++ b/src/Task.ts[m
[36m@@ -34,6 +34,7 @@[m [mexport class Task {[m
      * Required to be added to the LI the same way obsidian does as a `data-task` attribute.[m
      */[m
     public readonly originalStatusCharacter: string;[m
[32m+[m[32m    public readonly subtags: string;[m
     public readonly precedingHeader: string | null;[m
 [m
     public readonly priority: Priority;[m
[36m@@ -51,6 +52,7 @@[m [mexport class Task {[m
     public static readonly taskRegex = /^([\s\t]*)[-*] +\[(.)\] *(.*)/u;[m
     // The following regexes end with `$` because they will be matched and[m
     // removed from the end until none are left.[m
[32m+[m[32m    public static readonly tagsRegex = /(#[^\/\s]*)(\/[^\s]*)*\s/u;[m
     public static readonly priorityRegex = /([⏫🔼🔽])$/u;[m
     public static readonly startDateRegex = /🛫 ?(\d{4}-\d{2}-\d{2})$/u;[m
     public static readonly scheduledDateRegex = /[⏳⌛] ?(\d{4}-\d{2}-\d{2})$/u;[m
[36m@@ -69,6 +71,7 @@[m [mexport class Task {[m
         sectionStart,[m
         sectionIndex,[m
         originalStatusCharacter,[m
[32m+[m[32m        subtags,[m
         precedingHeader,[m
         priority,[m
         startDate,[m
[36m@@ -85,6 +88,7 @@[m [mexport class Task {[m
         sectionStart: number;[m
         sectionIndex: number;[m
         originalStatusCharacter: string;[m
[32m+[m[32m        subtags: string;[m
         precedingHeader: string | null;[m
         priority: Priority;[m
         startDate: moment.Moment | null;[m
[36m@@ -100,6 +104,7 @@[m [mexport class Task {[m
         this.indentation = indentation;[m
         this.sectionStart = sectionStart;[m
         this.sectionIndex = sectionIndex;[m
[32m+[m[32m        this.subtags = subtags;[m
         this.originalStatusCharacter = originalStatusCharacter;[m
         this.precedingHeader = precedingHeader;[m
 [m
[36m@@ -154,6 +159,14 @@[m [mexport class Task {[m
 [m
         let description = body;[m
 [m
[32m+[m[32m        // check for any number of subtags[m
[32m+[m[32m        let subtags: string = '';[m
[32m+[m[32m        const tagsMatch = description.match(Task.tagsRegex);[m
[32m+[m[32m        if (tagsMatch !== null) {[m
[32m+[m[32m            subtags = typeof tagsMatch[2] !== 'undefined' ? tagsMatch[2] : ''; // keep just the subtag(s)[m
[32m+[m[32m            description = description.replace(Task.tagsRegex, '').trim(); // removes the global filter as well[m
[32m+[m[32m        }[m
[32m+[m
         const blockLinkMatch = description.match(this.blockLinkRegex);[m
         const blockLink = blockLinkMatch !== null ? blockLinkMatch[0] : '';[m
 [m
[36m@@ -261,6 +274,7 @@[m [mexport class Task {[m
             sectionStart,[m
             sectionIndex,[m
             originalStatusCharacter: statusString,[m
[32m+[m[32m            subtags,[m
             precedingHeader,[m
             priority,[m
             startDate,[m
[36m@@ -289,8 +303,8 @@[m [mexport class Task {[m
 [m
         let taskAsString = this.toString(layoutOptions);[m
         const { globalFilter, removeGlobalFilter } = getSettings();[m
[31m-        if (removeGlobalFilter) {[m
[31m-            taskAsString = taskAsString.replace(globalFilter, '').trim();[m
[32m+[m[32m        if (!removeGlobalFilter) {[m
[32m+[m[32m            taskAsString = globalFilter + this.subtags + ' ' + taskAsString;[m
         }[m
 [m
         const textSpan = li.createSpan();[m
[1mdiff --git a/src/ui/EditTask.svelte b/src/ui/EditTask.svelte[m
[1mindex d224504..94fe28f 100644[m
[1m--- a/src/ui/EditTask.svelte[m
[1m+++ b/src/ui/EditTask.svelte[m
[36m@@ -9,6 +9,7 @@[m
     export let onSubmit: (updatedTasks: Task[]) => void | Promise<void>;[m
 [m
     let descriptionInput: HTMLInputElement;[m
[32m+[m[32m    let SubTagsInput: HTMLInputElement;[m
     let editableTask: {[m
         description: string;[m
         status: Status;[m
[36m@@ -18,6 +19,7 @@[m
         scheduledDate: string;[m
         dueDate: string;[m
         doneDate: string;[m
[32m+[m[32m        subTags: string;[m
     } = {[m
         description: '',[m
         status: Status.Todo,[m
[36m@@ -27,6 +29,7 @@[m
         scheduledDate: '',[m
         dueDate: '',[m
         doneDate: '',[m
[32m+[m[32m        subTags: ''[m
     };[m
 [m
     let parsedStartDate: string = '';[m
[36m@@ -34,6 +37,7 @@[m
     let parsedDueDate: string = '';[m
     let parsedRecurrence: string = '';[m
     let parsedDone: string = '';[m
[32m+[m[32m    let parsedSubTags: string = '';[m
 [m
     $: {[m
         if (!editableTask.startDate) {[m
[36m@@ -120,8 +124,9 @@[m
 [m
     onMount(() => {[m
         const { globalFilter } = getSettings();[m
[32m+[m[32m        const subTags = task.subtags;[m
         const description = task.description[m
[31m-            .replace(globalFilter, '')[m
[32m+[m[32m            .replace(globalFilter + task.subtags, '')[m
             .replace('  ', ' ')[m
             .trim();[m
 [m
[36m@@ -147,6 +152,7 @@[m
                 : '',[m
             dueDate: task.dueDate ? task.dueDate.format('YYYY-MM-DD') : '',[m
             doneDate: task.doneDate ? task.doneDate.format('YYYY-MM-DD') : '',[m
[32m+[m[32m            subTags: task.subtags[m
         };[m
         setTimeout(() => {[m
             descriptionInput.focus();[m
[36m@@ -157,7 +163,7 @@[m
         const { globalFilter } = getSettings();[m
         let description = editableTask.description.trim();[m
         if (!description.includes(globalFilter)) {[m
[31m-            description = globalFilter + ' ' + description;[m
[32m+[m[32m            description = globalFilter + editableTask.subTags + ' ' + description;[m
         }[m
 [m
         let startDate: moment.Moment | null = null;[m
[36m@@ -307,6 +313,17 @@[m
             </div>[m
         </div>[m
         <hr />[m
[32m+[m[32m        <div class="tasks-modal-section">[m
[32m+[m[32m            <label for="subtags">Subtags (optional)</label>[m
[32m+[m[32m            <input[m
[32m+[m[32m                bind:value={editableTask.subTags}[m
[32m+[m[32m                bind:this={SubTagsInput}[m
[32m+[m[32m                id="subTags"[m
[32m+[m[32m                type="text"[m
[32m+[m[32m                placeholder="Try appending a subtag with '/subtag'"[m
[32m+[m[32m            />[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <hr />[m
         <div class="tasks-modal-section">[m
             <div>[m
                 Status:[m
[1mdiff --git a/tests/Query.test.ts b/tests/Query.test.ts[m
[1mindex ee7b261..9175a29 100644[m
[1m--- a/tests/Query.test.ts[m
[1m+++ b/tests/Query.test.ts[m
[36m@@ -23,6 +23,7 @@[m [mdescribe('Query', () => {[m
                     doneDate: null,[m
                     recurrence: null,[m
                     blockLink: '',[m
[32m+[m[32m                    subtags: ''[m
                 }),[m
                 new Task({[m
                     status: Status.Todo,[m
[36m@@ -40,6 +41,7 @@[m [mdescribe('Query', () => {[m
                     doneDate: null,[m
                     recurrence: null,[m
                     blockLink: '',[m
[32m+[m[32m                    subtags: '/subtag1/sub-tag-2'[m
                 }),[m
             ];[m
             const input = 'path includes ab/c d';[m
